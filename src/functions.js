/**
* the \@param notation indicates an input paramater for a function. For example
* @param {string} foobar - indicates the function should accept a string
* and it should be called foobar, for example function(foobar){}
* \@return is the value that should be returned
*/

/**
* Write a function called `uselessFunction`.
* It should accept no arguments.
* It should return the null value.
* @return {null} - 'useless'.
*/

function uselessFunction(){

  return null;
}//your code here

//end your code

var bar = 'not a function';
var barType = typeof bar;

/**
* Assign the above variable 'bar' to an anonymous function with the following
* properites.
* @param {float[]} doubleArray - an array of floating point numbers.
* The function should multiply every number in the array by 2 (this should
* change the content of the array).
* @return {boolean} - true if the operation was sucessful, false otherwise.
* This should return false if any value in the array cannot be doubled.
*/
bar = function (doubleArray){

  for(var i = 0; i < doubleArray.length; i++){
    if(typeof doubleArray[i] != 'number')
          return false;
    else{  doubleArray[i] *= 2; }
  }
  return true;
}

//your code here

//end your code

/**
* Creates a new GitLog
* @class
* @property {string} hash - the hash of the commit
* @property {Date} date - the date of the commit as a JS Date object
* @property {string} message - the commit message
*/
function GitLog(hash, date, message) {

    this.hash = hash;
    this.date = date;
    this.message = message;

}

/**
* Create a function called parseGit to parse Git commit logs
* The logs will be generated by the following command
* git log --pretty=format:"%h %ad \"%s\"" --date=rfc
* The result looks like this
* 3782618 Wed, 7 Jan 2015 21:42:26 -0800 "Initial commit"
* |hash | |             date           | |   message    |
* There will always be a space between the hash and date and between the date
* and the first " of the commit message.
*
* You will covert these into GitLog objects with the following properties:
*
*
* @param {array.<string>} logArray - an array of Git commit messages of the
* above format.
* @return {array.<GitLog>} - return an array GitLog instances
*/

function parseGit(array){

var gitArray = [];
array.forEach(function(value, index, array){

    var matchResults = value.match(/\d+/);
    var hash = matchResults[0];

    matchResults = value.match(/\w+[,]\s\d\s\w+\s\d+\s\d+[:]\d+[:]\d+\s[-]\d+/);
    var date = matchResults[0];

    matchResults = value.match(/["]\w+\s\w+[""]/);
    var message = matchResults[0];

    var gitObj = new GitLog(hash,date,message);
    gitArray.push(gitObj);

  });
  console.log(gitArray[0]);
  return gitArray;


}//your code here

parseGit(["3782618 Wed, 7 Jan 2015 21:42:26 -0800 \"Initial commit\"","3782618 Wed, 7 Jan 2015 21:42:26 -0800 \"Initial commit\""]);
//end your code
